name: release

on:
  push:
    branches:
      - main

env:
  DEPENDENCIES_CACHE: cache-node-modules
  BUILD_ARTIFACTS: dist-artifacts

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Setup Git
        run: |
          git config user.name "GitHub Bot"
          git config user.email "gituser@example.com"
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('package-lock.json') }}
      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Version bump
        run: |
          npm run release
          git push --follow-tags
  build:
    needs: [ version ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Setup Git
        run: |
          git config user.name "GitHub Bot"
          git config user.email "gituser@example.com"
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('package-lock.json') }}
      - name: install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test
        if: ${{ github.event_name }} == 'pull_request'
        shell: bash
        run: npm run nx -- affected --base=last-release --target=test
      - name: Build
        if: ${{ github.event_name }} != 'pull_request'
        shell: bash
        run: npm run nx -- affected --base=origin/main --target=build
      - name: Upload artifacts
        if: ${{ github.event_name }} != 'pull_request'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BUILD_ARTIFACTS }}
          path: dist
